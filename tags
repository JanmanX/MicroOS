!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AS	os/Makefile	/^AS		= nasm$/;"	m
ASFLAGS	os/Makefile	/^ASFLAGS		= -f elf64$/;"	m
AS_INC	os/Makefile	/^AS_INC		= -I .\/init$/;"	m
BLACK	os/lib/klib.h	/^	BLACK = 0x0,$/;"	e	enum:color
BLUE	os/lib/klib.h	/^	BLUE = 0x1,$/;"	e	enum:color
BOCHS_DEBUG	os/lib/klib.h	71;"	d
BROWN	os/lib/klib.h	/^	BROWN = 0x6,$/;"	e	enum:color
BUFFER_SIZE	os/test/test.h	5;"	d
CC	os/Makefile	/^CC		= x86_64-elf-gcc$/;"	m
CFLAGS	os/Makefile	/^CFLAGS		= -std=gnu99 -ffreestanding -O0 -Wall -Wextra -m64 -g$/;"	m
CIRC_BUF_H	os/lib/circ_buf.h	2;"	d
CYAN	os/lib/klib.h	/^	CYAN = 0x3,$/;"	e	enum:color
DARK_GRAY	os/lib/klib.h	/^	DARK_GRAY = 0x8,$/;"	e	enum:color
DEBUG	os/lib/klib.h	80;"	d
DISKS_H	os/drivers/disk.h	2;"	d
DISKS_MAX	os/drivers/disk.h	6;"	d
ERROR	os/lib/klib.h	81;"	d
FILES	os/drivers/subsys.mk	/^FILES := disk.c  pci.c  keyboard.c  _keyboard.asm$/;"	m
FILES	os/fs/subsys.mk	/^FILES :=$/;"	m
FILES	os/init/subsys.mk	/^FILES := boot.asm  kernel.c  multiboot_header.asm  xsdt.c  rsdp.asm$/;"	m
FILES	os/kernel/subsys.mk	/^FILES := pic.c  idt.c  interrupt.c  _interrupt.asm$/;"	m
FILES	os/lib/subsys.mk	/^FILES := _asm.asm  circ_buf.c  klib_asm.asm  klib.c$/;"	m
FILES	os/mem/subsys.mk	/^FILES :=$/;"	m
FILES	os/proc/subsys.mk	/^FILES :=$/;"	m
FILES	os/test/subsys.mk	/^FILES := test.c$/;"	m
GAS	os/Makefile	/^GAS		= x86_64-elf-as$/;"	m
GASFLAGS	os/Makefile	/^GASFLAGS	=$/;"	m
GDT_H	os/kernel/gdt.h	2;"	d
GDT_KERNEL_CODE_SEGMENT	os/kernel/gdt.h	5;"	d
GREEN	os/lib/klib.h	/^	GREEN = 0x2,$/;"	e	enum:color
HALT	os/lib/klib.h	76;"	d
ICW1_ICW4	os/kernel/pic.h	12;"	d
ICW1_INIT	os/kernel/pic.h	16;"	d
ICW1_INTERVAL4	os/kernel/pic.h	14;"	d
ICW1_LEVEL	os/kernel/pic.h	15;"	d
ICW1_SINGLE	os/kernel/pic.h	13;"	d
ICW4_8086	os/kernel/pic.h	18;"	d
ICW4_AUTO	os/kernel/pic.h	19;"	d
ICW4_BUF_MASTER	os/kernel/pic.h	21;"	d
ICW4_BUF_SLAVE	os/kernel/pic.h	20;"	d
ICW4_SFNM	os/kernel/pic.h	22;"	d
IDTE_DPL_RING0	os/kernel/idt.h	15;"	d
IDTE_DPL_RING1	os/kernel/idt.h	16;"	d
IDTE_DPL_RING2	os/kernel/idt.h	17;"	d
IDTE_DPL_RING3	os/kernel/idt.h	18;"	d
IDTE_PRESENT	os/kernel/idt.h	14;"	d
IDTE_TYPE_INTERRUPT_16	os/kernel/idt.h	12;"	d
IDTE_TYPE_INTERRUPT_32	os/kernel/idt.h	10;"	d
IDTE_TYPE_TASK_16	os/kernel/idt.h	13;"	d
IDTE_TYPE_TRAP_16	os/kernel/idt.h	11;"	d
IDTE_TYPE_TRAP_32	os/kernel/idt.h	9;"	d
IDT_DESCRIPTOR_SIZE	os/kernel/idt.h	45;"	d
IDT_H	os/kernel/idt.h	2;"	d
INB	os/lib/klib.h	65;"	d
INC	os/Makefile	/^INC 		= -I. -I.\/include$/;"	m
IND	os/lib/klib.h	66;"	d
INPUT_BUTTON_1	os/drivers/keyboard.h	/^	INPUT_BUTTON_1 = 0x0001,$/;"	e	enum:__anon3
INPUT_CONS_AC_BACK	os/drivers/keyboard.h	/^	INPUT_CONS_AC_BACK,$/;"	e	enum:__anon4
INPUT_CONS_AC_BOOKMARKS	os/drivers/keyboard.h	/^	INPUT_CONS_AC_BOOKMARKS = 0x022A$/;"	e	enum:__anon4
INPUT_CONS_AC_FORWARD	os/drivers/keyboard.h	/^	INPUT_CONS_AC_FORWARD,$/;"	e	enum:__anon4
INPUT_CONS_AC_GO_TO	os/drivers/keyboard.h	/^	INPUT_CONS_AC_GO_TO,$/;"	e	enum:__anon4
INPUT_CONS_AC_HOME	os/drivers/keyboard.h	/^	INPUT_CONS_AC_HOME,$/;"	e	enum:__anon4
INPUT_CONS_AC_REFRESH	os/drivers/keyboard.h	/^	INPUT_CONS_AC_REFRESH,$/;"	e	enum:__anon4
INPUT_CONS_AC_SEARCH	os/drivers/keyboard.h	/^	INPUT_CONS_AC_SEARCH = 0x0221,$/;"	e	enum:__anon4
INPUT_CONS_AC_STOP	os/drivers/keyboard.h	/^	INPUT_CONS_AC_STOP,$/;"	e	enum:__anon4
INPUT_CONS_AL_CALCULATOR	os/drivers/keyboard.h	/^	INPUT_CONS_AL_CALCULATOR = 0x0192,$/;"	e	enum:__anon4
INPUT_CONS_AL_EMAIL_READER	os/drivers/keyboard.h	/^	INPUT_CONS_AL_EMAIL_READER = 0x018A,$/;"	e	enum:__anon4
INPUT_CONS_AL_LOCAL_BROWSER	os/drivers/keyboard.h	/^	INPUT_CONS_AL_LOCAL_BROWSER = 0x0194,$/;"	e	enum:__anon4
INPUT_CONS_AL_MEDIA_SELECT	os/drivers/keyboard.h	/^	INPUT_CONS_AL_MEDIA_SELECT = 0x0183,$/;"	e	enum:__anon4
INPUT_CONS_MUTE	os/drivers/keyboard.h	/^	INPUT_CONS_MUTE = 0x00E2,$/;"	e	enum:__anon4
INPUT_CONS_PLAY_PAUSE	os/drivers/keyboard.h	/^	INPUT_CONS_PLAY_PAUSE = 0x00CD,$/;"	e	enum:__anon4
INPUT_CONS_SCAN_NEXT_TRACK	os/drivers/keyboard.h	/^	INPUT_CONS_SCAN_NEXT_TRACK = 0x00B5,$/;"	e	enum:__anon4
INPUT_CONS_SCAN_PREVIOUS_TRACK	os/drivers/keyboard.h	/^	INPUT_CONS_SCAN_PREVIOUS_TRACK,$/;"	e	enum:__anon4
INPUT_CONS_STOP	os/drivers/keyboard.h	/^	INPUT_CONS_STOP,$/;"	e	enum:__anon4
INPUT_CONS_VOLUME_DOWN	os/drivers/keyboard.h	/^	INPUT_CONS_VOLUME_DOWN,$/;"	e	enum:__anon4
INPUT_CONS_VOLUME_UP	os/drivers/keyboard.h	/^	INPUT_CONS_VOLUME_UP = 0x00E9,$/;"	e	enum:__anon4
INPUT_KEY_0	os/drivers/keyboard.h	/^	INPUT_KEY_0,$/;"	e	enum:__anon1
INPUT_KEY_1	os/drivers/keyboard.h	/^	INPUT_KEY_1,$/;"	e	enum:__anon1
INPUT_KEY_2	os/drivers/keyboard.h	/^	INPUT_KEY_2,$/;"	e	enum:__anon1
INPUT_KEY_3	os/drivers/keyboard.h	/^	INPUT_KEY_3,$/;"	e	enum:__anon1
INPUT_KEY_4	os/drivers/keyboard.h	/^	INPUT_KEY_4,$/;"	e	enum:__anon1
INPUT_KEY_5	os/drivers/keyboard.h	/^	INPUT_KEY_5,$/;"	e	enum:__anon1
INPUT_KEY_6	os/drivers/keyboard.h	/^	INPUT_KEY_6,$/;"	e	enum:__anon1
INPUT_KEY_7	os/drivers/keyboard.h	/^	INPUT_KEY_7,$/;"	e	enum:__anon1
INPUT_KEY_8	os/drivers/keyboard.h	/^	INPUT_KEY_8,$/;"	e	enum:__anon1
INPUT_KEY_9	os/drivers/keyboard.h	/^	INPUT_KEY_9,$/;"	e	enum:__anon1
INPUT_KEY_A	os/drivers/keyboard.h	/^	INPUT_KEY_A = 0x0004,$/;"	e	enum:__anon1
INPUT_KEY_AGAIN	os/drivers/keyboard.h	/^	INPUT_KEY_AGAIN,$/;"	e	enum:__anon1
INPUT_KEY_ALT_ERASE	os/drivers/keyboard.h	/^	INPUT_KEY_ALT_ERASE,$/;"	e	enum:__anon1
INPUT_KEY_APOSTROPH	os/drivers/keyboard.h	/^	INPUT_KEY_APOSTROPH,$/;"	e	enum:__anon1
INPUT_KEY_APPLICATION	os/drivers/keyboard.h	/^	INPUT_KEY_APPLICATION,$/;"	e	enum:__anon1
INPUT_KEY_B	os/drivers/keyboard.h	/^	INPUT_KEY_B,$/;"	e	enum:__anon1
INPUT_KEY_BACKSLASH	os/drivers/keyboard.h	/^	INPUT_KEY_BACKSLASH,$/;"	e	enum:__anon1
INPUT_KEY_BACKSPACE	os/drivers/keyboard.h	/^	INPUT_KEY_BACKSPACE,$/;"	e	enum:__anon1
INPUT_KEY_C	os/drivers/keyboard.h	/^	INPUT_KEY_C,$/;"	e	enum:__anon1
INPUT_KEY_CANCEL	os/drivers/keyboard.h	/^	INPUT_KEY_CANCEL,$/;"	e	enum:__anon1
INPUT_KEY_CAPS_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_CAPS_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_CLEAR	os/drivers/keyboard.h	/^	INPUT_KEY_CLEAR,$/;"	e	enum:__anon1
INPUT_KEY_CLEAR_AGAIN	os/drivers/keyboard.h	/^	INPUT_KEY_CLEAR_AGAIN,$/;"	e	enum:__anon1
INPUT_KEY_CLOSE_BRACKET	os/drivers/keyboard.h	/^	INPUT_KEY_CLOSE_BRACKET,$/;"	e	enum:__anon1
INPUT_KEY_COMMA	os/drivers/keyboard.h	/^	INPUT_KEY_COMMA,$/;"	e	enum:__anon1
INPUT_KEY_COPY	os/drivers/keyboard.h	/^	INPUT_KEY_COPY,$/;"	e	enum:__anon1
INPUT_KEY_CR_SEL	os/drivers/keyboard.h	/^	INPUT_KEY_CR_SEL,$/;"	e	enum:__anon1
INPUT_KEY_CURRENCY_SUBUNIT	os/drivers/keyboard.h	/^	INPUT_KEY_CURRENCY_SUBUNIT,$/;"	e	enum:__anon1
INPUT_KEY_CURRENCY_UNIT	os/drivers/keyboard.h	/^	INPUT_KEY_CURRENCY_UNIT,$/;"	e	enum:__anon1
INPUT_KEY_CUT	os/drivers/keyboard.h	/^	INPUT_KEY_CUT,$/;"	e	enum:__anon1
INPUT_KEY_D	os/drivers/keyboard.h	/^	INPUT_KEY_D,$/;"	e	enum:__anon1
INPUT_KEY_DASH	os/drivers/keyboard.h	/^	INPUT_KEY_DASH,$/;"	e	enum:__anon1
INPUT_KEY_DECIMAL_SEP	os/drivers/keyboard.h	/^	INPUT_KEY_DECIMAL_SEP,$/;"	e	enum:__anon1
INPUT_KEY_DELETE	os/drivers/keyboard.h	/^	INPUT_KEY_DELETE,$/;"	e	enum:__anon1
INPUT_KEY_DOWN_ARROW	os/drivers/keyboard.h	/^	INPUT_KEY_DOWN_ARROW,$/;"	e	enum:__anon1
INPUT_KEY_E	os/drivers/keyboard.h	/^	INPUT_KEY_E,$/;"	e	enum:__anon1
INPUT_KEY_END	os/drivers/keyboard.h	/^	INPUT_KEY_END,$/;"	e	enum:__anon1
INPUT_KEY_ENTER	os/drivers/keyboard.h	/^	INPUT_KEY_ENTER,$/;"	e	enum:__anon1
INPUT_KEY_EQUAL	os/drivers/keyboard.h	/^	INPUT_KEY_EQUAL,$/;"	e	enum:__anon1
INPUT_KEY_EQUAL_SIGN	os/drivers/keyboard.h	/^	INPUT_KEY_EQUAL_SIGN,$/;"	e	enum:__anon1
INPUT_KEY_ESCAPE	os/drivers/keyboard.h	/^	INPUT_KEY_ESCAPE,$/;"	e	enum:__anon1
INPUT_KEY_EUROPE_1	os/drivers/keyboard.h	/^	INPUT_KEY_EUROPE_1,$/;"	e	enum:__anon1
INPUT_KEY_EUROPE_2	os/drivers/keyboard.h	/^	INPUT_KEY_EUROPE_2,$/;"	e	enum:__anon1
INPUT_KEY_EXECUTE	os/drivers/keyboard.h	/^	INPUT_KEY_EXECUTE,$/;"	e	enum:__anon1
INPUT_KEY_EX_SEL	os/drivers/keyboard.h	/^	INPUT_KEY_EX_SEL,$/;"	e	enum:__anon1
INPUT_KEY_F	os/drivers/keyboard.h	/^	INPUT_KEY_F,$/;"	e	enum:__anon1
INPUT_KEY_F1	os/drivers/keyboard.h	/^	INPUT_KEY_F1,$/;"	e	enum:__anon1
INPUT_KEY_F10	os/drivers/keyboard.h	/^	INPUT_KEY_F10,$/;"	e	enum:__anon1
INPUT_KEY_F11	os/drivers/keyboard.h	/^	INPUT_KEY_F11,$/;"	e	enum:__anon1
INPUT_KEY_F12	os/drivers/keyboard.h	/^	INPUT_KEY_F12,$/;"	e	enum:__anon1
INPUT_KEY_F13	os/drivers/keyboard.h	/^	INPUT_KEY_F13,$/;"	e	enum:__anon1
INPUT_KEY_F14	os/drivers/keyboard.h	/^	INPUT_KEY_F14,$/;"	e	enum:__anon1
INPUT_KEY_F15	os/drivers/keyboard.h	/^	INPUT_KEY_F15,$/;"	e	enum:__anon1
INPUT_KEY_F16	os/drivers/keyboard.h	/^	INPUT_KEY_F16,$/;"	e	enum:__anon1
INPUT_KEY_F17	os/drivers/keyboard.h	/^	INPUT_KEY_F17,$/;"	e	enum:__anon1
INPUT_KEY_F18	os/drivers/keyboard.h	/^	INPUT_KEY_F18,$/;"	e	enum:__anon1
INPUT_KEY_F19	os/drivers/keyboard.h	/^	INPUT_KEY_F19,$/;"	e	enum:__anon1
INPUT_KEY_F2	os/drivers/keyboard.h	/^	INPUT_KEY_F2,$/;"	e	enum:__anon1
INPUT_KEY_F20	os/drivers/keyboard.h	/^	INPUT_KEY_F20,$/;"	e	enum:__anon1
INPUT_KEY_F21	os/drivers/keyboard.h	/^	INPUT_KEY_F21,$/;"	e	enum:__anon1
INPUT_KEY_F22	os/drivers/keyboard.h	/^	INPUT_KEY_F22,$/;"	e	enum:__anon1
INPUT_KEY_F23	os/drivers/keyboard.h	/^	INPUT_KEY_F23,$/;"	e	enum:__anon1
INPUT_KEY_F24	os/drivers/keyboard.h	/^	INPUT_KEY_F24,$/;"	e	enum:__anon1
INPUT_KEY_F3	os/drivers/keyboard.h	/^	INPUT_KEY_F3,$/;"	e	enum:__anon1
INPUT_KEY_F4	os/drivers/keyboard.h	/^	INPUT_KEY_F4,$/;"	e	enum:__anon1
INPUT_KEY_F5	os/drivers/keyboard.h	/^	INPUT_KEY_F5,$/;"	e	enum:__anon1
INPUT_KEY_F6	os/drivers/keyboard.h	/^	INPUT_KEY_F6,$/;"	e	enum:__anon1
INPUT_KEY_F7	os/drivers/keyboard.h	/^	INPUT_KEY_F7,$/;"	e	enum:__anon1
INPUT_KEY_F8	os/drivers/keyboard.h	/^	INPUT_KEY_F8,$/;"	e	enum:__anon1
INPUT_KEY_F9	os/drivers/keyboard.h	/^	INPUT_KEY_F9,$/;"	e	enum:__anon1
INPUT_KEY_FIND	os/drivers/keyboard.h	/^	INPUT_KEY_FIND,$/;"	e	enum:__anon1
INPUT_KEY_G	os/drivers/keyboard.h	/^	INPUT_KEY_G,$/;"	e	enum:__anon1
INPUT_KEY_GRAVE_ACCENT	os/drivers/keyboard.h	/^	INPUT_KEY_GRAVE_ACCENT,$/;"	e	enum:__anon1
INPUT_KEY_H	os/drivers/keyboard.h	/^	INPUT_KEY_H,$/;"	e	enum:__anon1
INPUT_KEY_HELP	os/drivers/keyboard.h	/^	INPUT_KEY_HELP,$/;"	e	enum:__anon1
INPUT_KEY_HOME	os/drivers/keyboard.h	/^	INPUT_KEY_HOME,$/;"	e	enum:__anon1
INPUT_KEY_I	os/drivers/keyboard.h	/^	INPUT_KEY_I,$/;"	e	enum:__anon1
INPUT_KEY_I10L_1	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_1,$/;"	e	enum:__anon1
INPUT_KEY_I10L_2	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_2,$/;"	e	enum:__anon1
INPUT_KEY_I10L_3	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_3,$/;"	e	enum:__anon1
INPUT_KEY_I10L_4	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_4,$/;"	e	enum:__anon1
INPUT_KEY_I10L_5	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_5,$/;"	e	enum:__anon1
INPUT_KEY_I10L_6	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_6,$/;"	e	enum:__anon1
INPUT_KEY_I10L_7	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_7,$/;"	e	enum:__anon1
INPUT_KEY_I10L_8	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_8,$/;"	e	enum:__anon1
INPUT_KEY_I10L_9	os/drivers/keyboard.h	/^	INPUT_KEY_I10L_9,$/;"	e	enum:__anon1
INPUT_KEY_INSERT	os/drivers/keyboard.h	/^	INPUT_KEY_INSERT,$/;"	e	enum:__anon1
INPUT_KEY_J	os/drivers/keyboard.h	/^	INPUT_KEY_J,$/;"	e	enum:__anon1
INPUT_KEY_K	os/drivers/keyboard.h	/^	INPUT_KEY_K,$/;"	e	enum:__anon1
INPUT_KEY_KP_0	os/drivers/keyboard.h	/^	INPUT_KEY_KP_0,$/;"	e	enum:__anon1
INPUT_KEY_KP_00	os/drivers/keyboard.h	/^	INPUT_KEY_KP_00 = 0x00B0,$/;"	e	enum:__anon1
INPUT_KEY_KP_000	os/drivers/keyboard.h	/^	INPUT_KEY_KP_000,$/;"	e	enum:__anon1
INPUT_KEY_KP_1	os/drivers/keyboard.h	/^	INPUT_KEY_KP_1,$/;"	e	enum:__anon1
INPUT_KEY_KP_2	os/drivers/keyboard.h	/^	INPUT_KEY_KP_2,$/;"	e	enum:__anon1
INPUT_KEY_KP_3	os/drivers/keyboard.h	/^	INPUT_KEY_KP_3,$/;"	e	enum:__anon1
INPUT_KEY_KP_4	os/drivers/keyboard.h	/^	INPUT_KEY_KP_4,$/;"	e	enum:__anon1
INPUT_KEY_KP_5	os/drivers/keyboard.h	/^	INPUT_KEY_KP_5,$/;"	e	enum:__anon1
INPUT_KEY_KP_6	os/drivers/keyboard.h	/^	INPUT_KEY_KP_6,$/;"	e	enum:__anon1
INPUT_KEY_KP_7	os/drivers/keyboard.h	/^	INPUT_KEY_KP_7,$/;"	e	enum:__anon1
INPUT_KEY_KP_8	os/drivers/keyboard.h	/^	INPUT_KEY_KP_8,$/;"	e	enum:__anon1
INPUT_KEY_KP_9	os/drivers/keyboard.h	/^	INPUT_KEY_KP_9,$/;"	e	enum:__anon1
INPUT_KEY_KP_A	os/drivers/keyboard.h	/^	INPUT_KEY_KP_A,$/;"	e	enum:__anon1
INPUT_KEY_KP_AMP	os/drivers/keyboard.h	/^	INPUT_KEY_KP_AMP,$/;"	e	enum:__anon1
INPUT_KEY_KP_AT	os/drivers/keyboard.h	/^	INPUT_KEY_KP_AT,$/;"	e	enum:__anon1
INPUT_KEY_KP_B	os/drivers/keyboard.h	/^	INPUT_KEY_KP_B,$/;"	e	enum:__anon1
INPUT_KEY_KP_BACKSPACE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_BACKSPACE,$/;"	e	enum:__anon1
INPUT_KEY_KP_BIN	os/drivers/keyboard.h	/^	INPUT_KEY_KP_BIN,$/;"	e	enum:__anon1
INPUT_KEY_KP_C	os/drivers/keyboard.h	/^	INPUT_KEY_KP_C,$/;"	e	enum:__anon1
INPUT_KEY_KP_CARET	os/drivers/keyboard.h	/^	INPUT_KEY_KP_CARET,$/;"	e	enum:__anon1
INPUT_KEY_KP_CLEAR	os/drivers/keyboard.h	/^	INPUT_KEY_KP_CLEAR,$/;"	e	enum:__anon1
INPUT_KEY_KP_CLEAR_ENTRY	os/drivers/keyboard.h	/^	INPUT_KEY_KP_CLEAR_ENTRY,$/;"	e	enum:__anon1
INPUT_KEY_KP_CLOSE_BRACE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_CLOSE_BRACE,$/;"	e	enum:__anon1
INPUT_KEY_KP_CLOSE_PARENTHESIS	os/drivers/keyboard.h	/^	INPUT_KEY_KP_CLOSE_PARENTHESIS,$/;"	e	enum:__anon1
INPUT_KEY_KP_COLON	os/drivers/keyboard.h	/^	INPUT_KEY_KP_COLON,$/;"	e	enum:__anon1
INPUT_KEY_KP_COMMA	os/drivers/keyboard.h	/^	INPUT_KEY_KP_COMMA,$/;"	e	enum:__anon1
INPUT_KEY_KP_D	os/drivers/keyboard.h	/^	INPUT_KEY_KP_D,$/;"	e	enum:__anon1
INPUT_KEY_KP_DASH	os/drivers/keyboard.h	/^	INPUT_KEY_KP_DASH,$/;"	e	enum:__anon1
INPUT_KEY_KP_DEC	os/drivers/keyboard.h	/^	INPUT_KEY_KP_DEC,$/;"	e	enum:__anon1
INPUT_KEY_KP_DOUBLE_AMP	os/drivers/keyboard.h	/^	INPUT_KEY_KP_DOUBLE_AMP,$/;"	e	enum:__anon1
INPUT_KEY_KP_DOUBLE_PIPE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_DOUBLE_PIPE,$/;"	e	enum:__anon1
INPUT_KEY_KP_E	os/drivers/keyboard.h	/^	INPUT_KEY_KP_E,$/;"	e	enum:__anon1
INPUT_KEY_KP_ENTER	os/drivers/keyboard.h	/^	INPUT_KEY_KP_ENTER,$/;"	e	enum:__anon1
INPUT_KEY_KP_EQUAL	os/drivers/keyboard.h	/^	INPUT_KEY_KP_EQUAL,$/;"	e	enum:__anon1
INPUT_KEY_KP_EXCLAMATION_MARK	os/drivers/keyboard.h	/^	INPUT_KEY_KP_EXCLAMATION_MARK,$/;"	e	enum:__anon1
INPUT_KEY_KP_F	os/drivers/keyboard.h	/^	INPUT_KEY_KP_F,$/;"	e	enum:__anon1
INPUT_KEY_KP_GREATER_THEN	os/drivers/keyboard.h	/^	INPUT_KEY_KP_GREATER_THEN,$/;"	e	enum:__anon1
INPUT_KEY_KP_HEX	os/drivers/keyboard.h	/^	INPUT_KEY_KP_HEX,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_ADD	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_ADD,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_CLEAR	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_CLEAR,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_DIVIDE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_DIVIDE,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_MULTIPLY	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_MULTIPLY,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_RECALL	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_RECALL,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_STORE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_STORE,$/;"	e	enum:__anon1
INPUT_KEY_KP_MEM_SUBTRACT	os/drivers/keyboard.h	/^	INPUT_KEY_KP_MEM_SUBTRACT,$/;"	e	enum:__anon1
INPUT_KEY_KP_NUMBER	os/drivers/keyboard.h	/^	INPUT_KEY_KP_NUMBER,$/;"	e	enum:__anon1
INPUT_KEY_KP_OCT	os/drivers/keyboard.h	/^	INPUT_KEY_KP_OCT,$/;"	e	enum:__anon1
INPUT_KEY_KP_OPEN_BRACE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_OPEN_BRACE,$/;"	e	enum:__anon1
INPUT_KEY_KP_OPEN_PARENTHESIS	os/drivers/keyboard.h	/^	INPUT_KEY_KP_OPEN_PARENTHESIS,$/;"	e	enum:__anon1
INPUT_KEY_KP_PERCENT	os/drivers/keyboard.h	/^	INPUT_KEY_KP_PERCENT,$/;"	e	enum:__anon1
INPUT_KEY_KP_PERIOD	os/drivers/keyboard.h	/^	INPUT_KEY_KP_PERIOD,$/;"	e	enum:__anon1
INPUT_KEY_KP_PIPE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_PIPE,$/;"	e	enum:__anon1
INPUT_KEY_KP_PLUS	os/drivers/keyboard.h	/^	INPUT_KEY_KP_PLUS,$/;"	e	enum:__anon1
INPUT_KEY_KP_PLUS_MINUS	os/drivers/keyboard.h	/^	INPUT_KEY_KP_PLUS_MINUS,$/;"	e	enum:__anon1
INPUT_KEY_KP_SLASH	os/drivers/keyboard.h	/^	INPUT_KEY_KP_SLASH,$/;"	e	enum:__anon1
INPUT_KEY_KP_SMALLER_THEN	os/drivers/keyboard.h	/^	INPUT_KEY_KP_SMALLER_THEN,$/;"	e	enum:__anon1
INPUT_KEY_KP_SPACE	os/drivers/keyboard.h	/^	INPUT_KEY_KP_SPACE,$/;"	e	enum:__anon1
INPUT_KEY_KP_STAR	os/drivers/keyboard.h	/^	INPUT_KEY_KP_STAR,$/;"	e	enum:__anon1
INPUT_KEY_KP_TAB	os/drivers/keyboard.h	/^	INPUT_KEY_KP_TAB,$/;"	e	enum:__anon1
INPUT_KEY_KP_XOR	os/drivers/keyboard.h	/^	INPUT_KEY_KP_XOR,$/;"	e	enum:__anon1
INPUT_KEY_L	os/drivers/keyboard.h	/^	INPUT_KEY_L,$/;"	e	enum:__anon1
INPUT_KEY_LANG_1	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_1,$/;"	e	enum:__anon1
INPUT_KEY_LANG_2	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_2,$/;"	e	enum:__anon1
INPUT_KEY_LANG_3	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_3,$/;"	e	enum:__anon1
INPUT_KEY_LANG_4	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_4,$/;"	e	enum:__anon1
INPUT_KEY_LANG_5	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_5,$/;"	e	enum:__anon1
INPUT_KEY_LANG_6	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_6,$/;"	e	enum:__anon1
INPUT_KEY_LANG_7	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_7,$/;"	e	enum:__anon1
INPUT_KEY_LANG_8	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_8,$/;"	e	enum:__anon1
INPUT_KEY_LANG_9	os/drivers/keyboard.h	/^	INPUT_KEY_LANG_9,$/;"	e	enum:__anon1
INPUT_KEY_LEFT_ALT	os/drivers/keyboard.h	/^	INPUT_KEY_LEFT_ALT,$/;"	e	enum:__anon1
INPUT_KEY_LEFT_ARROW	os/drivers/keyboard.h	/^	INPUT_KEY_LEFT_ARROW,$/;"	e	enum:__anon1
INPUT_KEY_LEFT_CTRL	os/drivers/keyboard.h	/^	INPUT_KEY_LEFT_CTRL = 0x00E0,$/;"	e	enum:__anon1
INPUT_KEY_LEFT_GUI	os/drivers/keyboard.h	/^	INPUT_KEY_LEFT_GUI,$/;"	e	enum:__anon1
INPUT_KEY_LEFT_SHIFT	os/drivers/keyboard.h	/^	INPUT_KEY_LEFT_SHIFT,$/;"	e	enum:__anon1
INPUT_KEY_LOCKING_CAPS_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_LOCKING_CAPS_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_LOCKING_NUM_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_LOCKING_NUM_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_LOCKING_SCROLL_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_LOCKING_SCROLL_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_M	os/drivers/keyboard.h	/^	INPUT_KEY_M,$/;"	e	enum:__anon1
INPUT_KEY_MENU	os/drivers/keyboard.h	/^	INPUT_KEY_MENU,$/;"	e	enum:__anon1
INPUT_KEY_MUTE	os/drivers/keyboard.h	/^	INPUT_KEY_MUTE,$/;"	e	enum:__anon1
INPUT_KEY_N	os/drivers/keyboard.h	/^	INPUT_KEY_N,$/;"	e	enum:__anon1
INPUT_KEY_NUM_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_NUM_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_O	os/drivers/keyboard.h	/^	INPUT_KEY_O,$/;"	e	enum:__anon1
INPUT_KEY_OPEN_BRACKET	os/drivers/keyboard.h	/^	INPUT_KEY_OPEN_BRACKET,$/;"	e	enum:__anon1
INPUT_KEY_OPER	os/drivers/keyboard.h	/^	INPUT_KEY_OPER,$/;"	e	enum:__anon1
INPUT_KEY_OUT	os/drivers/keyboard.h	/^	INPUT_KEY_OUT,$/;"	e	enum:__anon1
INPUT_KEY_P	os/drivers/keyboard.h	/^	INPUT_KEY_P,$/;"	e	enum:__anon1
INPUT_KEY_PAGE_DOWN	os/drivers/keyboard.h	/^	INPUT_KEY_PAGE_DOWN,$/;"	e	enum:__anon1
INPUT_KEY_PAGE_UP	os/drivers/keyboard.h	/^	INPUT_KEY_PAGE_UP,$/;"	e	enum:__anon1
INPUT_KEY_PASTE	os/drivers/keyboard.h	/^	INPUT_KEY_PASTE,$/;"	e	enum:__anon1
INPUT_KEY_PAUSE	os/drivers/keyboard.h	/^	INPUT_KEY_PAUSE,$/;"	e	enum:__anon1
INPUT_KEY_PERIOD	os/drivers/keyboard.h	/^	INPUT_KEY_PERIOD,$/;"	e	enum:__anon1
INPUT_KEY_POWER	os/drivers/keyboard.h	/^	INPUT_KEY_POWER,$/;"	e	enum:__anon1
INPUT_KEY_PRINT_SCREEN	os/drivers/keyboard.h	/^	INPUT_KEY_PRINT_SCREEN,$/;"	e	enum:__anon1
INPUT_KEY_PRIOR	os/drivers/keyboard.h	/^	INPUT_KEY_PRIOR,$/;"	e	enum:__anon1
INPUT_KEY_Q	os/drivers/keyboard.h	/^	INPUT_KEY_Q,$/;"	e	enum:__anon1
INPUT_KEY_R	os/drivers/keyboard.h	/^	INPUT_KEY_R,$/;"	e	enum:__anon1
INPUT_KEY_RETURN	os/drivers/keyboard.h	/^	INPUT_KEY_RETURN,$/;"	e	enum:__anon1
INPUT_KEY_RIGHT_ALT	os/drivers/keyboard.h	/^	INPUT_KEY_RIGHT_ALT,$/;"	e	enum:__anon1
INPUT_KEY_RIGHT_ARROW	os/drivers/keyboard.h	/^	INPUT_KEY_RIGHT_ARROW,$/;"	e	enum:__anon1
INPUT_KEY_RIGHT_CTRL	os/drivers/keyboard.h	/^	INPUT_KEY_RIGHT_CTRL,$/;"	e	enum:__anon1
INPUT_KEY_RIGHT_GUI	os/drivers/keyboard.h	/^	INPUT_KEY_RIGHT_GUI$/;"	e	enum:__anon1
INPUT_KEY_RIGHT_SHIFT	os/drivers/keyboard.h	/^	INPUT_KEY_RIGHT_SHIFT,$/;"	e	enum:__anon1
INPUT_KEY_S	os/drivers/keyboard.h	/^	INPUT_KEY_S,$/;"	e	enum:__anon1
INPUT_KEY_SCROLL_LOCK	os/drivers/keyboard.h	/^	INPUT_KEY_SCROLL_LOCK,$/;"	e	enum:__anon1
INPUT_KEY_SELECT	os/drivers/keyboard.h	/^	INPUT_KEY_SELECT,$/;"	e	enum:__anon1
INPUT_KEY_SEMICOLON	os/drivers/keyboard.h	/^	INPUT_KEY_SEMICOLON,$/;"	e	enum:__anon1
INPUT_KEY_SEPARATOR	os/drivers/keyboard.h	/^	INPUT_KEY_SEPARATOR,$/;"	e	enum:__anon1
INPUT_KEY_SLASH	os/drivers/keyboard.h	/^	INPUT_KEY_SLASH,$/;"	e	enum:__anon1
INPUT_KEY_SPACEBAR	os/drivers/keyboard.h	/^	INPUT_KEY_SPACEBAR,$/;"	e	enum:__anon1
INPUT_KEY_STOP	os/drivers/keyboard.h	/^	INPUT_KEY_STOP,$/;"	e	enum:__anon1
INPUT_KEY_SYSREQ	os/drivers/keyboard.h	/^	INPUT_KEY_SYSREQ,$/;"	e	enum:__anon1
INPUT_KEY_T	os/drivers/keyboard.h	/^	INPUT_KEY_T,$/;"	e	enum:__anon1
INPUT_KEY_TAB	os/drivers/keyboard.h	/^	INPUT_KEY_TAB,$/;"	e	enum:__anon1
INPUT_KEY_THOUSANDS_SEP	os/drivers/keyboard.h	/^	INPUT_KEY_THOUSANDS_SEP,$/;"	e	enum:__anon1
INPUT_KEY_U	os/drivers/keyboard.h	/^	INPUT_KEY_U,$/;"	e	enum:__anon1
INPUT_KEY_UNDO	os/drivers/keyboard.h	/^	INPUT_KEY_UNDO,$/;"	e	enum:__anon1
INPUT_KEY_UP_ARROW	os/drivers/keyboard.h	/^	INPUT_KEY_UP_ARROW,$/;"	e	enum:__anon1
INPUT_KEY_V	os/drivers/keyboard.h	/^	INPUT_KEY_V,$/;"	e	enum:__anon1
INPUT_KEY_VOLUME_DOWN	os/drivers/keyboard.h	/^	INPUT_KEY_VOLUME_DOWN,$/;"	e	enum:__anon1
INPUT_KEY_VOLUME_UP	os/drivers/keyboard.h	/^	INPUT_KEY_VOLUME_UP,$/;"	e	enum:__anon1
INPUT_KEY_W	os/drivers/keyboard.h	/^	INPUT_KEY_W,$/;"	e	enum:__anon1
INPUT_KEY_X	os/drivers/keyboard.h	/^	INPUT_KEY_X,$/;"	e	enum:__anon1
INPUT_KEY_Y	os/drivers/keyboard.h	/^	INPUT_KEY_Y,$/;"	e	enum:__anon1
INPUT_KEY_Z	os/drivers/keyboard.h	/^	INPUT_KEY_Z,$/;"	e	enum:__anon1
INPUT_LED_CAPSLOCK	os/drivers/keyboard.h	/^	INPUT_LED_CAPSLOCK,$/;"	e	enum:__anon2
INPUT_LED_NUMLOCK	os/drivers/keyboard.h	/^	INPUT_LED_NUMLOCK = 0x0001,$/;"	e	enum:__anon2
INPUT_LED_SCROLLLOCK	os/drivers/keyboard.h	/^	INPUT_LED_SCROLLLOCK$/;"	e	enum:__anon2
INTERRUPT_H	os/kernel/interrupt.h	2;"	d
INVALID_SCANCODE	os/drivers/keyboard.h	35;"	d
KB_DEV_NAME	os/drivers/keyboard.h	30;"	d
KB_IRQ	os/drivers/keyboard.h	29;"	d
KB_KEY_BUFFER	os/drivers/keyboard.h	5;"	d
KB_PIC_LINE	os/drivers/keyboard.h	31;"	d
KB_SCAN_CODES	os/drivers/keyboard.h	34;"	d
KB_WAIT_INPUT_BUSY	os/drivers/keyboard.c	8;"	d	file:
KB_WAIT_OUTPUT_BUSY	os/drivers/keyboard.c	15;"	d	file:
KEYBOARD_H	os/drivers/keyboard.h	2;"	d
KLIB_H	os/lib/klib.h	2;"	d
LD	os/Makefile	/^LD		= ld$/;"	m
LDFLAGS	os/Makefile	/^LDFLAGS 	= --script=$(LDSCRIPT) -Map kernel.map -z max-page-size=0x1000$/;"	m
LDSCRIPT	os/Makefile	/^LDSCRIPT	= .\/linker.ld$/;"	m
LED_CAPS_LOCK	os/drivers/keyboard.h	44;"	d
LED_NUM_LOCK	os/drivers/keyboard.h	43;"	d
LED_SCROLL_LOCK	os/drivers/keyboard.h	42;"	d
LIGHT_BLUE	os/lib/klib.h	/^	LIGHT_BLUE = 0x9,$/;"	e	enum:color
LIGHT_CYAN	os/lib/klib.h	/^	LIGHT_CYAN = 0xB,$/;"	e	enum:color
LIGHT_GRAY	os/lib/klib.h	/^	LIGHT_GRAY = 0x7,$/;"	e	enum:color
LIGHT_GREEN	os/lib/klib.h	/^	LIGHT_GREEN = 0xA,$/;"	e	enum:color
LIGHT_MAGENTA	os/lib/klib.h	/^	LIGHT_MAGENTA = 0xD,$/;"	e	enum:color
LIGHT_RED	os/lib/klib.h	/^	LIGHT_RED = 0xC,$/;"	e	enum:color
LOG	os/lib/klib.h	78;"	d
MAGENTA	os/lib/klib.h	/^	MAGENTA = 0x5,$/;"	e	enum:color
MAX_ARGS	os/lib/klib.c	129;"	d	file:
MAX_INTERRUPTS	os/kernel/idt.h	6;"	d
MODULE	os/drivers/subsys.mk	/^MODULE := drivers$/;"	m
MODULE	os/fs/subsys.mk	/^MODULE :=$/;"	m
MODULE	os/init/subsys.mk	/^MODULE := init$/;"	m
MODULE	os/kernel/subsys.mk	/^MODULE := kernel$/;"	m
MODULE	os/lib/subsys.mk	/^MODULE := lib$/;"	m
MODULE	os/mem/subsys.mk	/^MODULE :=$/;"	m
MODULE	os/proc/subsys.mk	/^MODULE :=$/;"	m
MODULE	os/test/subsys.mk	/^MODULE := test$/;"	m
MODULES	os/Makefile	/^MODULES		:= drivers fs init kernel mem proc lib test$/;"	m
MULTIBOOT2_BOOTLOADER_MAGIC	os/include/multiboot2.h	33;"	d
MULTIBOOT2_HEADER_MAGIC	os/include/multiboot2.h	30;"	d
MULTIBOOT_ARCHITECTURE_I386	os/include/multiboot2.h	73;"	d
MULTIBOOT_ARCHITECTURE_MIPS32	os/include/multiboot2.h	74;"	d
MULTIBOOT_CONSOLE_FLAGS_CONSOLE_REQUIRED	os/include/multiboot2.h	77;"	d
MULTIBOOT_CONSOLE_FLAGS_EGA_TEXT_SUPPORTED	os/include/multiboot2.h	78;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_EGA_TEXT	os/include/multiboot2.h	266;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_INDEXED	os/include/multiboot2.h	264;"	d
MULTIBOOT_FRAMEBUFFER_TYPE_RGB	os/include/multiboot2.h	265;"	d
MULTIBOOT_HEADER	os/include/multiboot2.h	23;"	d
MULTIBOOT_HEADER_ALIGN	os/include/multiboot2.h	27;"	d
MULTIBOOT_HEADER_TAG_ADDRESS	os/include/multiboot2.h	66;"	d
MULTIBOOT_HEADER_TAG_CONSOLE_FLAGS	os/include/multiboot2.h	68;"	d
MULTIBOOT_HEADER_TAG_EFI_BS	os/include/multiboot2.h	71;"	d
MULTIBOOT_HEADER_TAG_END	os/include/multiboot2.h	64;"	d
MULTIBOOT_HEADER_TAG_ENTRY_ADDRESS	os/include/multiboot2.h	67;"	d
MULTIBOOT_HEADER_TAG_FRAMEBUFFER	os/include/multiboot2.h	69;"	d
MULTIBOOT_HEADER_TAG_INFORMATION_REQUEST	os/include/multiboot2.h	65;"	d
MULTIBOOT_HEADER_TAG_MODULE_ALIGN	os/include/multiboot2.h	70;"	d
MULTIBOOT_HEADER_TAG_OPTIONAL	os/include/multiboot2.h	75;"	d
MULTIBOOT_INFO_ALIGN	os/include/multiboot2.h	39;"	d
MULTIBOOT_MEMORY_ACPI_RECLAIMABLE	os/include/multiboot2.h	174;"	d
MULTIBOOT_MEMORY_AVAILABLE	os/include/multiboot2.h	172;"	d
MULTIBOOT_MEMORY_BADRAM	os/include/multiboot2.h	176;"	d
MULTIBOOT_MEMORY_NVS	os/include/multiboot2.h	175;"	d
MULTIBOOT_MEMORY_RESERVED	os/include/multiboot2.h	173;"	d
MULTIBOOT_MOD_ALIGN	os/include/multiboot2.h	36;"	d
MULTIBOOT_SEARCH	os/include/multiboot2.h	26;"	d
MULTIBOOT_TAG_ALIGN	os/include/multiboot2.h	43;"	d
MULTIBOOT_TAG_TYPE_ACPI_NEW	os/include/multiboot2.h	59;"	d
MULTIBOOT_TAG_TYPE_ACPI_OLD	os/include/multiboot2.h	58;"	d
MULTIBOOT_TAG_TYPE_APM	os/include/multiboot2.h	54;"	d
MULTIBOOT_TAG_TYPE_BASIC_MEMINFO	os/include/multiboot2.h	48;"	d
MULTIBOOT_TAG_TYPE_BOOTDEV	os/include/multiboot2.h	49;"	d
MULTIBOOT_TAG_TYPE_BOOT_LOADER_NAME	os/include/multiboot2.h	46;"	d
MULTIBOOT_TAG_TYPE_CMDLINE	os/include/multiboot2.h	45;"	d
MULTIBOOT_TAG_TYPE_EFI32	os/include/multiboot2.h	55;"	d
MULTIBOOT_TAG_TYPE_EFI64	os/include/multiboot2.h	56;"	d
MULTIBOOT_TAG_TYPE_EFI_BS	os/include/multiboot2.h	62;"	d
MULTIBOOT_TAG_TYPE_EFI_MMAP	os/include/multiboot2.h	61;"	d
MULTIBOOT_TAG_TYPE_ELF_SECTIONS	os/include/multiboot2.h	53;"	d
MULTIBOOT_TAG_TYPE_END	os/include/multiboot2.h	44;"	d
MULTIBOOT_TAG_TYPE_FRAMEBUFFER	os/include/multiboot2.h	52;"	d
MULTIBOOT_TAG_TYPE_MMAP	os/include/multiboot2.h	50;"	d
MULTIBOOT_TAG_TYPE_MODULE	os/include/multiboot2.h	47;"	d
MULTIBOOT_TAG_TYPE_NETWORK	os/include/multiboot2.h	60;"	d
MULTIBOOT_TAG_TYPE_SMBIOS	os/include/multiboot2.h	57;"	d
MULTIBOOT_TAG_TYPE_VBE	os/include/multiboot2.h	51;"	d
NULL	os/lib/klib.h	8;"	d
OBJS	os/Makefile	/^OBJS	:= $(patsubst %.asm,%.o,$(filter %.asm,$(SRC))) \\$/;"	m
OUTB	os/lib/klib.h	56;"	d
OUTD	os/lib/klib.h	60;"	d
PCI_BUS_MAX	os/drivers/pci.h	6;"	d
PCI_CLASS_CODE_TABLE_LEN	os/drivers/pci.c	105;"	d	file:
PCI_CLASS_MASS_STORAGE_CONTROLLER	os/drivers/pci.h	31;"	d
PCI_CONFIG_ADDRESS	os/drivers/pci.h	9;"	d
PCI_CONFIG_DATA	os/drivers/pci.h	10;"	d
PCI_H	os/drivers/pci.h	2;"	d
PCI_REGISTER_BAR0	os/drivers/pci.h	19;"	d
PCI_REGISTER_BAR1	os/drivers/pci.h	20;"	d
PCI_REGISTER_BAR2	os/drivers/pci.h	21;"	d
PCI_REGISTER_BAR3	os/drivers/pci.h	22;"	d
PCI_REGISTER_BAR4	os/drivers/pci.h	23;"	d
PCI_REGISTER_BAR5	os/drivers/pci.h	24;"	d
PCI_REGISTER_CLASS	os/drivers/pci.h	18;"	d
PCI_REGISTER_COMMAND	os/drivers/pci.h	15;"	d
PCI_REGISTER_DEVICE_ID	os/drivers/pci.h	14;"	d
PCI_REGISTER_INTERRUPT_LINE	os/drivers/pci.h	26;"	d
PCI_REGISTER_INTERRUPT_PIN	os/drivers/pci.h	27;"	d
PCI_REGISTER_STATUS	os/drivers/pci.h	16;"	d
PCI_REGISTER_SUBCLASS	os/drivers/pci.h	17;"	d
PCI_REGISTER_VENDOR_ID	os/drivers/pci.h	13;"	d
PCI_SLOT_MAX	os/drivers/pci.h	7;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	os/drivers/pci.h	32;"	d
PDPT	os/init/vars.asm	/^PDPT:		resb 4096			; 64 	PDPE$/;"	l
PDT	os/init/vars.asm	/^PDT:		resb (PAGE_ENTRY_SIZE*64*512)	; 32768 PDE$/;"	l
PIC1	os/kernel/pic.h	24;"	d
PIC1_CMD	os/kernel/pic.h	26;"	d
PIC1_DATA	os/kernel/pic.h	27;"	d
PIC1_VECTOR_OFFSET	os/kernel/pic.h	6;"	d
PIC2	os/kernel/pic.h	25;"	d
PIC2_CMD	os/kernel/pic.h	28;"	d
PIC2_DATA	os/kernel/pic.h	29;"	d
PIC2_VECTOR_OFFSET	os/kernel/pic.h	8;"	d
PIC_EOI	os/kernel/pic.h	31;"	d
PIC_H	os/kernel/pic.h	2;"	d
PIC_READ_IRR	os/kernel/pic.h	33;"	d
PIC_READ_ISR	os/kernel/pic.h	34;"	d
PML4T	os/init/vars.asm	/^PML4T:		resb 4096	  		; 1 	PML4E$/;"	l
PS2_KB_ACK	os/drivers/keyboard.h	18;"	d
PS2_KB_DATA	os/drivers/keyboard.h	9;"	d
PS2_KB_DISABLE_SCANNING	os/drivers/keyboard.h	17;"	d
PS2_KB_ENABLE_SCANNING	os/drivers/keyboard.h	16;"	d
PS2_KB_IDENTIFY	os/drivers/keyboard.h	15;"	d
PS2_KB_INPUT_READY	os/drivers/keyboard.h	27;"	d
PS2_KB_INTERFACETEST	os/drivers/keyboard.h	14;"	d
PS2_KB_OUTPUT_READY	os/drivers/keyboard.h	24;"	d
PS2_KB_RESEND_LAST	os/drivers/keyboard.h	19;"	d
PS2_KB_STATUS	os/drivers/keyboard.h	10;"	d
RED	os/lib/klib.h	/^	RED = 0x4,$/;"	e	enum:color
RSDP_DESC_10_LEN	os/init/xsdt.h	11;"	d
RSDP_DESC_20_LEN	os/init/xsdt.h	12;"	d
RSDP_REV_10	os/init/xsdt.h	9;"	d
RSDP_REV_20	os/init/xsdt.h	10;"	d
RSDP_SIGNATURE	os/init/xsdt.h	6;"	d
SCAN_CTRL	os/drivers/keyboard.h	38;"	d
SCAN_EXT0	os/drivers/keyboard.h	40;"	d
SCAN_EXT1	os/drivers/keyboard.h	41;"	d
SCAN_NUMLOCK	os/drivers/keyboard.h	39;"	d
SCAN_RELEASE	os/drivers/keyboard.h	37;"	d
SRC	os/Makefile	/^SRC		:=$/;"	m
VGA_ADDRESS	os/lib/klib.c	60;"	d	file:
WHITE	os/lib/klib.h	/^	WHITE = 0XF,$/;"	e	enum:color
YELLOW	os/lib/klib.h	/^	YELLOW = 0XE,$/;"	e	enum:color
_PAGETABLE_H	os/mem/pagetable.h	2;"	d
_TEST_H	os/test/test.h	2;"	d
_XSDT_H	os/init/xsdt.h	2;"	d
__pic_get_irq_reg	os/kernel/pic.c	/^static uint16_t __pic_get_irq_reg(int ocw3)$/;"	f	file:
_available	os/mem/pagetable.h	/^	uint16_t _available:11;$/;"	m	struct:pml4t
_available	os/mem/pagetable.h	/^	uint16_t _available:11;$/;"	m	struct:pml4t::pdpt::pdt
_debug_str	os/kernel/_interrupt.asm	/^_debug_str db 'DUMMY INTR', 0x0A, 0x00$/;"	d
_get_rsdp	os/init/rsdp.asm	/^_get_rsdp:$/;"	l
_key_buffer	os/drivers/keyboard.c	/^static uint8_t _key_buffer[KB_KEY_BUFFER];$/;"	v	file:
_keyboard_interrupt_handler	os/drivers/_keyboard.asm	/^_keyboard_interrupt_handler:$/;"	l
_one	os/mem/pagetable.h	/^	uint8_t _one:1;$/;"	m	struct:pml4t::pdpt::pdt
_pause	os/lib/klib.c	/^void _pause(void)$/;"	f
_reserved	os/mem/pagetable.h	/^	uint8_t _reserved:8;$/;"	m	struct:pml4t::pdpt::pdt
_zero	os/mem/pagetable.h	/^	uint8_t _zero:1;$/;"	m	struct:pml4t::pdpt
a	os/mem/pagetable.h	/^	uint8_t a:1;$/;"	m	struct:pml4t
a	os/mem/pagetable.h	/^	uint8_t a:1;$/;"	m	struct:pml4t::pdpt
a	os/mem/pagetable.h	/^	uint8_t a:1;$/;"	m	struct:pml4t::pdpt::pdt
acpi_checksum	os/init/xsdt.c	/^uint8_t acpi_checksum(const uint8_t *data, uint64_t len)$/;"	f
addr	os/include/multiboot2.h	/^  multiboot_uint64_t addr;$/;"	m	struct:multiboot_mmap_entry
architecture	os/include/multiboot2.h	/^  multiboot_uint32_t architecture;$/;"	m	struct:multiboot_header
avl	os/mem/pagetable.h	/^	uint8_t avl:3;$/;"	m	struct:pml4t
avl	os/mem/pagetable.h	/^	uint8_t avl:3;$/;"	m	struct:pml4t::pdpt
avl	os/mem/pagetable.h	/^	uint8_t avl:3;$/;"	m	struct:pml4t::pdpt::pdt
ax	os/kernel/interrupt.h	/^	uint64_t ax;$/;"	m	struct:pt_regs
base	os/kernel/idt.h	/^	uint64_t base;$/;"	m	struct:idt
base_address	os/mem/pagetable.h	/^	uint64_t base_address:31;$/;"	m	struct:pml4t::pdpt::pdt
base_address	os/mem/pagetable.h	/^	uint64_t base_address:40;$/;"	m	struct:pml4t
base_address	os/mem/pagetable.h	/^	uint64_t base_address:40;$/;"	m	struct:pml4t::pdpt
biosdev	os/include/multiboot2.h	/^  multiboot_uint32_t biosdev;$/;"	m	struct:multiboot_tag_bootdev
blue	os/include/multiboot2.h	/^  multiboot_uint8_t blue;$/;"	m	struct:multiboot_color
bp	os/kernel/interrupt.h	/^	uint64_t bp;$/;"	m	struct:pt_regs
bss_end_addr	os/include/multiboot2.h	/^  multiboot_uint32_t bss_end_addr;$/;"	m	struct:multiboot_header_tag_address
buffer	os/test/test.c	/^uint8_t buffer[BUFFER_SIZE];$/;"	v
bus	os/drivers/pci.h	/^	uint8_t bus;$/;"	m	struct:pci_dev
bx	os/kernel/interrupt.h	/^	uint64_t bx;$/;"	m	struct:pt_regs
check_cpuid	os/init/boot.asm	/^check_cpuid:$/;"	l
check_long_mode	os/init/boot.asm	/^check_long_mode:$/;"	l
check_multiboot	os/init/boot.asm	/^check_multiboot:$/;"	l
checksum	os/include/multiboot2.h	/^  multiboot_uint32_t checksum;$/;"	m	struct:multiboot_header
checksum	os/init/xsdt.h	/^	uint8_t checksum;$/;"	m	struct:rsdp_desc_10
checksum	os/init/xsdt.h	/^	uint8_t checksum;$/;"	m	struct:xsdt_hdr
circ_buf	os/lib/circ_buf.h	/^typedef struct circ_buf {$/;"	s
circ_buf_init	os/lib/circ_buf.c	/^void circ_buf_init(circ_buf_t *buf, uint8_t *buf_start, uint32_t elem_size,$/;"	f
circ_buf_pop	os/lib/circ_buf.c	/^void circ_buf_pop(circ_buf_t *buf, void *elem)$/;"	f
circ_buf_push	os/lib/circ_buf.c	/^void circ_buf_push(circ_buf_t *buf, void *elem)$/;"	f
circ_buf_t	os/lib/circ_buf.h	/^} circ_buf_t;$/;"	t	typeref:struct:circ_buf
class	os/drivers/pci.c	/^	uint8_t		class ;$/;"	m	struct:pci_classcode_entry	file:
clear_screen	os/lib/klib.c	/^void clear_screen()$/;"	f
cmdline	os/include/multiboot2.h	/^  char cmdline[0];$/;"	m	struct:multiboot_tag_module
color	os/lib/klib.h	/^enum color {$/;"	g
common	os/include/multiboot2.h	/^  struct multiboot_tag_framebuffer_common common;$/;"	m	struct:multiboot_tag_framebuffer	typeref:struct:multiboot_tag_framebuffer::multiboot_tag_framebuffer_common
console_flags	os/include/multiboot2.h	/^  multiboot_uint32_t console_flags;$/;"	m	struct:multiboot_header_tag_console_flags
count	os/lib/circ_buf.h	/^	uint64_t	count;		\/* Current number of elements in buf *\/$/;"	m	struct:circ_buf
creatorid	os/init/xsdt.h	/^	uint32_t creatorid;$/;"	m	struct:xsdt_hdr
creatorrevision	os/init/xsdt.h	/^	uint32_t creatorrevision;$/;"	m	struct:xsdt_hdr
cs	os/kernel/interrupt.h	/^	uint64_t cs;$/;"	m	struct:pt_regs
cseg	os/include/multiboot2.h	/^  multiboot_uint16_t cseg;$/;"	m	struct:multiboot_tag_apm
cseg_16	os/include/multiboot2.h	/^  multiboot_uint16_t cseg_16;$/;"	m	struct:multiboot_tag_apm
cseg_16_len	os/include/multiboot2.h	/^  multiboot_uint16_t cseg_16_len;$/;"	m	struct:multiboot_tag_apm
cseg_len	os/include/multiboot2.h	/^  multiboot_uint16_t cseg_len;$/;"	m	struct:multiboot_tag_apm
ctrl	os/drivers/keyboard.c	/^static volatile uint8_t ctrl = 0;$/;"	v	file:
cx	os/kernel/interrupt.h	/^	uint64_t cx;$/;"	m	struct:pt_regs
d	os/mem/pagetable.h	/^	uint8_t d:1;$/;"	m	struct:pml4t::pdpt::pdt
depth	os/include/multiboot2.h	/^  multiboot_uint32_t depth;$/;"	m	struct:multiboot_header_tag_framebuffer
desc	os/drivers/pci.c	/^	char *		desc ;$/;"	m	struct:pci_classcode_entry	file:
descr_size	os/include/multiboot2.h	/^  multiboot_uint32_t descr_size;$/;"	m	struct:multiboot_tag_efi_mmap
descr_vers	os/include/multiboot2.h	/^  multiboot_uint32_t descr_vers;$/;"	m	struct:multiboot_tag_efi_mmap
dhcpack	os/include/multiboot2.h	/^  multiboot_uint8_t dhcpack[0];$/;"	m	struct:multiboot_tag_network
di	os/kernel/interrupt.h	/^	uint64_t di;$/;"	m	struct:pt_regs
disable_interrupts	os/kernel/_interrupt.asm	/^disable_interrupts:$/;"	l
disk_count	os/drivers/disk.c	/^uint32_t disk_count()$/;"	f
disk_init	os/drivers/disk.c	/^void disk_init(uint8_t bus, uint8_t slot)$/;"	f
disk_table	os/drivers/disk.c	/^pci_dev_t disk_table[DISKS_MAX] = {0};$/;"	v
disks	os/drivers/disk.c	/^uint32_t disks = 0;$/;"	v
dseg	os/include/multiboot2.h	/^  multiboot_uint16_t dseg;$/;"	m	struct:multiboot_tag_apm
dseg_len	os/include/multiboot2.h	/^  multiboot_uint16_t dseg_len;$/;"	m	struct:multiboot_tag_apm
dx	os/kernel/interrupt.h	/^	uint64_t dx;$/;"	m	struct:pt_regs
efi_mmap	os/include/multiboot2.h	/^  multiboot_uint8_t efi_mmap[0];$/;"	m	struct:multiboot_tag_efi_mmap
elem_size	os/lib/circ_buf.h	/^	uint64_t	elem_size;	\/* Size of each element. (mod 8) *\/$/;"	m	struct:circ_buf
enable_interrupts	os/kernel/_interrupt.asm	/^enable_interrupts:$/;"	l
enable_paging	os/init/boot.asm	/^enable_paging:$/;"	l
entries	os/include/multiboot2.h	/^  struct multiboot_mmap_entry entries[0];$/;"	m	struct:multiboot_tag_mmap	typeref:struct:multiboot_tag_mmap::multiboot_mmap_entry
entry_addr	os/include/multiboot2.h	/^  multiboot_uint32_t entry_addr;$/;"	m	struct:multiboot_header_tag_entry_address
entry_size	os/include/multiboot2.h	/^  multiboot_uint32_t entry_size;$/;"	m	struct:multiboot_tag_mmap
entry_version	os/include/multiboot2.h	/^  multiboot_uint32_t entry_version;$/;"	m	struct:multiboot_tag_mmap
entsize	os/include/multiboot2.h	/^  multiboot_uint32_t entsize;$/;"	m	struct:multiboot_tag_elf_sections
error	os/init/boot.asm	/^error:$/;"	l
exception_gate_t	os/kernel/idt.h	/^typedef void (*exception_gate_t)(void);$/;"	t
ext_checksum	os/init/xsdt.h	/^	uint8_t ext_checksum;$/;"	m	struct:rsdp_desc_20
extend_page_tables	os/init/boot.asm	/^extend_page_tables:$/;"	l
extern	os/drivers/_keyboard.asm	/^extern keyboard_interrupt_handler$/;"	l
extern	os/drivers/_keyboard.asm	/^extern kprintf$/;"	l
extern	os/drivers/_keyboard.asm	/^extern pic_eoi$/;"	l
extern	os/init/boot.asm	/^extern main$/;"	l
extern	os/kernel/_interrupt.asm	/^extern interrupt_handle$/;"	l
extern	os/kernel/_interrupt.asm	/^extern kprintf$/;"	l
extern	os/kernel/_interrupt.asm	/^extern pic_eoi$/;"	l
external_specification	os/include/multiboot2.h	/^  multiboot_uint8_t external_specification[256];$/;"	m	struct:multiboot_vbe_mode_info_block
external_specification	os/include/multiboot2.h	/^  multiboot_uint8_t external_specification[512];$/;"	m	struct:multiboot_vbe_info_block
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_address
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_console_flags
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_entry_address
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_framebuffer
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_information_request
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_header_tag_module_align
flags	os/include/multiboot2.h	/^  multiboot_uint16_t flags;$/;"	m	struct:multiboot_tag_apm
flags	os/kernel/interrupt.h	/^	uint64_t flags;$/;"	m	struct:pt_regs
framebuffer_addr	os/include/multiboot2.h	/^  multiboot_uint64_t framebuffer_addr;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_blue_field_position	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_blue_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_blue_mask_size	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_blue_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_bpp	os/include/multiboot2.h	/^  multiboot_uint8_t framebuffer_bpp;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_green_field_position	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_green_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_green_mask_size	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_green_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_height	os/include/multiboot2.h	/^  multiboot_uint32_t framebuffer_height;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_palette	os/include/multiboot2.h	/^      struct multiboot_color framebuffer_palette[0];$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon6	typeref:struct:multiboot_tag_framebuffer::__anon5::__anon6::multiboot_color
framebuffer_palette_num_colors	os/include/multiboot2.h	/^      multiboot_uint16_t framebuffer_palette_num_colors;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon6
framebuffer_pitch	os/include/multiboot2.h	/^  multiboot_uint32_t framebuffer_pitch;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_red_field_position	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_red_field_position;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_red_mask_size	os/include/multiboot2.h	/^      multiboot_uint8_t framebuffer_red_mask_size;$/;"	m	struct:multiboot_tag_framebuffer::__anon5::__anon7
framebuffer_type	os/include/multiboot2.h	/^  multiboot_uint8_t framebuffer_type;$/;"	m	struct:multiboot_tag_framebuffer_common
framebuffer_width	os/include/multiboot2.h	/^  multiboot_uint32_t framebuffer_width;$/;"	m	struct:multiboot_tag_framebuffer_common
g	os/mem/pagetable.h	/^	uint8_t g:1;$/;"	m	struct:pml4t::pdpt::pdt
gdt64	os/init/vars.asm	/^gdt64:                               ; Global Descriptor Table (64-bit).$/;"	l
get_rsdp	os/init/xsdt.c	/^rsdp_desc_t *get_rsdp(void)$/;"	f
global	os/drivers/_keyboard.asm	/^global _keyboard_interrupt_handler$/;"	l
global	os/init/boot.asm	/^global start$/;"	l
global	os/init/rsdp.asm	/^global _get_rsdp$/;"	l
global	os/kernel/_interrupt.asm	/^global disable_interrupts$/;"	l
global	os/kernel/_interrupt.asm	/^global enable_interrupts$/;"	l
global	os/kernel/_interrupt.asm	/^global interrupt_dummy_handler$/;"	l
global	os/kernel/_interrupt.asm	/^global interrupt_handler_%1$/;"	l
global	os/lib/klib_asm.asm	/^global kpanic$/;"	l
green	os/include/multiboot2.h	/^  multiboot_uint8_t green;$/;"	m	struct:multiboot_color
head	os/lib/circ_buf.h	/^	uint8_t		*head;		\/* Head of the buffer *\/$/;"	m	struct:circ_buf
header_addr	os/include/multiboot2.h	/^  multiboot_uint32_t header_addr;$/;"	m	struct:multiboot_header_tag_address
header_end	os/init/multiboot_header.asm	/^header_end:$/;"	l
header_length	os/include/multiboot2.h	/^  multiboot_uint32_t header_length;$/;"	m	struct:multiboot_header
header_start	os/init/multiboot_header.asm	/^header_start:$/;"	l
height	os/include/multiboot2.h	/^  multiboot_uint32_t height;$/;"	m	struct:multiboot_header_tag_framebuffer
idt	os/kernel/idt.c	/^static idt_t idt;$/;"	v	file:
idt	os/kernel/idt.h	/^typedef struct idt {$/;"	s
idt_desc	os/kernel/idt.h	/^typedef struct idt_desc {$/;"	s
idt_desc_t	os/kernel/idt.h	/^}__attribute__((packed))  idt_desc_t;$/;"	t	typeref:struct:idt_desc
idt_descriptors	os/kernel/idt.c	/^static idt_desc_t idt_descriptors[MAX_INTERRUPTS];$/;"	v	file:
idt_init	os/kernel/idt.c	/^void idt_init()$/;"	f
idt_set_interrupt	os/kernel/idt.c	/^void idt_set_interrupt(uint32_t index, uint16_t selector, uint8_t type_attr,$/;"	f
idt_t	os/kernel/idt.h	/^}__attribute__((packed)) idt_t;$/;"	t	typeref:struct:idt
ign	os/mem/pagetable.h	/^	uint8_t ign:1;$/;"	m	struct:pml4t
ign	os/mem/pagetable.h	/^	uint8_t ign:1;$/;"	m	struct:pml4t::pdpt
inb	os/lib/klib.c	/^inline uint8_t inb(uint16_t port)$/;"	f
ind	os/lib/klib.c	/^inline uint32_t ind(uint16_t port)$/;"	f
interrupt_dummy_handler	os/kernel/_interrupt.asm	/^interrupt_dummy_handler:$/;"	l
interrupt_handle	os/kernel/interrupt.c	/^void interrupt_handle(pt_regs_t *regs)$/;"	f
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 0$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 1$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 10$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 11$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 12$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 13$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 14$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 15$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 16$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 17$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 18$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 19$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 2$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 20$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 3$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 4$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 5$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 6$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 7$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 8$/;"	l
interrupt_handler	os/kernel/_interrupt.asm	/^interrupt_handler 9$/;"	l
interrupt_handler_main	os/kernel/_interrupt.asm	/^interrupt_handler_main:$/;"	l
interrupt_handler_t	os/kernel/interrupt.h	/^typedef void (*interrupt_handler_t)(void);$/;"	t
interrupt_init	os/kernel/interrupt.c	/^void interrupt_init()$/;"	f
interrupt_setup_gates	os/kernel/interrupt.c	/^void interrupt_setup_gates()$/;"	f
io_wait	os/lib/klib.c	/^inline void io_wait(void)$/;"	f
ip	os/kernel/interrupt.h	/^	uint64_t ip;$/;"	m	struct:pt_regs
ist	os/kernel/idt.h	/^	uint8_t ist;$/;"	m	struct:idt_desc
itoa	os/lib/klib.c	/^void itoa(char *buf, int base, int64_t n)$/;"	f
key_buffer	os/drivers/keyboard.c	/^static circ_buf_t key_buffer;$/;"	v	file:
key_down	os/drivers/keyboard.c	/^static volatile uint8_t key_down = 0;$/;"	v	file:
key_map_lower	os/drivers/keyboard.c	/^static uint8_t key_map_lower[] = { 0x00, 0, '1', '2', '3', '4', '5', '6', '7',$/;"	v	file:
key_map_upper	os/drivers/keyboard.c	/^static uint8_t key_map_upper[] = { 0x00, 0, '!', '@', '#', '$', '%', '^', '&',$/;"	v	file:
keyboard_get_key	os/drivers/keyboard.c	/^char keyboard_get_key()$/;"	f
keyboard_init	os/drivers/keyboard.c	/^void keyboard_init()$/;"	f
keyboard_interrupt_handler	os/drivers/keyboard.c	/^void keyboard_interrupt_handler()$/;"	f
keyboard_keys_available	os/drivers/keyboard.c	/^uint64_t keyboard_keys_available(void)$/;"	f
keyboard_read	os/drivers/keyboard.c	/^static uint8_t keyboard_read(void)$/;"	f	file:
keyboard_send	os/drivers/keyboard.c	/^static uint8_t keyboard_send(uint8_t data)$/;"	f	file:
keyboard_status	os/drivers/keyboard.c	/^static uint8_t keyboard_status(void)$/;"	f	file:
kpanic	os/lib/klib_asm.asm	/^kpanic:$/;"	l
kprint	os/lib/klib.c	/^void kprint(char *str)$/;"	f
kprintf	os/lib/klib.c	/^void kprintf(const char *fmt, ...)$/;"	f
len	os/include/multiboot2.h	/^  multiboot_uint64_t len;$/;"	m	struct:multiboot_mmap_entry
length	os/init/xsdt.h	/^	uint32_t length;$/;"	m	struct:rsdp_desc_20
length	os/init/xsdt.h	/^	uint32_t length;$/;"	m	struct:xsdt_hdr
limit	os/kernel/idt.h	/^	uint16_t limit;$/;"	m	struct:idt
load_addr	os/include/multiboot2.h	/^  multiboot_uint32_t load_addr;$/;"	m	struct:multiboot_header_tag_address
load_end_addr	os/include/multiboot2.h	/^  multiboot_uint32_t load_end_addr;$/;"	m	struct:multiboot_header_tag_address
long_mode_start	os/init/boot.asm	/^long_mode_start:$/;"	l
magic	os/include/multiboot2.h	/^  multiboot_uint32_t magic;$/;"	m	struct:multiboot_header
main	os/init/kernel.c	/^void main(unsigned long mb_info_struct_addr, uint32_t *pml4t)$/;"	f
major	os/include/multiboot2.h	/^  multiboot_uint8_t major;$/;"	m	struct:multiboot_tag_smbios
mbz	os/mem/pagetable.h	/^	uint8_t mbz:1;$/;"	m	struct:pml4t::pdpt
mbz	os/mem/pagetable.h	/^	uint8_t mbz:2;$/;"	m	struct:pml4t
mem_lower	os/include/multiboot2.h	/^  multiboot_uint32_t mem_lower;$/;"	m	struct:multiboot_tag_basic_meminfo
mem_upper	os/include/multiboot2.h	/^  multiboot_uint32_t mem_upper;$/;"	m	struct:multiboot_tag_basic_meminfo
memcmp	os/lib/klib.c	/^uint8_t memcmp(const uint8_t *s1, const uint8_t *s2, uint64_t n)$/;"	f
memcmp2	os/lib/klib.c	/^uint8_t memcmp2(const void *s1, const void *s2, uint64_t n)$/;"	f
memcpy	os/lib/klib.c	/^void *memcpy(void *dst, void *src, uint64_t count)$/;"	f
minor	os/include/multiboot2.h	/^  multiboot_uint8_t minor;$/;"	m	struct:multiboot_tag_smbios
mod_end	os/include/multiboot2.h	/^  multiboot_uint32_t mod_end;$/;"	m	struct:multiboot_tag_module
mod_start	os/include/multiboot2.h	/^  multiboot_uint32_t mod_start;$/;"	m	struct:multiboot_tag_module
msg	os/drivers/_keyboard.asm	/^msg: db 'KEYBOARD INT HANDLED', 0x0A, 0x00$/;"	d
multiboot_arch	os/init/multiboot_header.asm	/^	multiboot_arch		dd MULTIBOOT_ARCHITECTURE_I386$/;"	d
multiboot_color	os/include/multiboot2.h	/^struct multiboot_color$/;"	s
multiboot_header	os/include/multiboot2.h	/^struct multiboot_header$/;"	s
multiboot_header_chksm	os/init/multiboot_header.asm	/^	multiboot_header_chksm	dd 0x100000000 - (MULTIBOOT2_HEADER_MAGIC \\$/;"	d
multiboot_header_len	os/init/multiboot_header.asm	/^	multiboot_header_len	dd header_end - header_start$/;"	d
multiboot_header_tag	os/include/multiboot2.h	/^struct multiboot_header_tag$/;"	s
multiboot_header_tag_address	os/include/multiboot2.h	/^struct multiboot_header_tag_address$/;"	s
multiboot_header_tag_console_flags	os/include/multiboot2.h	/^struct multiboot_header_tag_console_flags$/;"	s
multiboot_header_tag_entry_address	os/include/multiboot2.h	/^struct multiboot_header_tag_entry_address$/;"	s
multiboot_header_tag_framebuffer	os/include/multiboot2.h	/^struct multiboot_header_tag_framebuffer$/;"	s
multiboot_header_tag_information_request	os/include/multiboot2.h	/^struct multiboot_header_tag_information_request$/;"	s
multiboot_header_tag_module_align	os/include/multiboot2.h	/^struct multiboot_header_tag_module_align$/;"	s
multiboot_magic	os/init/multiboot_header.asm	/^	multiboot_magic 	dd MULTIBOOT2_HEADER_MAGIC$/;"	d
multiboot_memory_map_t	os/include/multiboot2.h	/^typedef struct multiboot_mmap_entry multiboot_memory_map_t;$/;"	t	typeref:struct:multiboot_mmap_entry
multiboot_mmap_entry	os/include/multiboot2.h	/^struct multiboot_mmap_entry$/;"	s
multiboot_tag	os/include/multiboot2.h	/^struct multiboot_tag$/;"	s
multiboot_tag_apm	os/include/multiboot2.h	/^struct multiboot_tag_apm$/;"	s
multiboot_tag_basic_meminfo	os/include/multiboot2.h	/^struct multiboot_tag_basic_meminfo$/;"	s
multiboot_tag_bootdev	os/include/multiboot2.h	/^struct multiboot_tag_bootdev$/;"	s
multiboot_tag_efi32	os/include/multiboot2.h	/^struct multiboot_tag_efi32$/;"	s
multiboot_tag_efi64	os/include/multiboot2.h	/^struct multiboot_tag_efi64$/;"	s
multiboot_tag_efi_mmap	os/include/multiboot2.h	/^struct multiboot_tag_efi_mmap$/;"	s
multiboot_tag_elf_sections	os/include/multiboot2.h	/^struct multiboot_tag_elf_sections$/;"	s
multiboot_tag_framebuffer	os/include/multiboot2.h	/^struct multiboot_tag_framebuffer$/;"	s
multiboot_tag_framebuffer_common	os/include/multiboot2.h	/^struct multiboot_tag_framebuffer_common$/;"	s
multiboot_tag_mmap	os/include/multiboot2.h	/^struct multiboot_tag_mmap$/;"	s
multiboot_tag_module	os/include/multiboot2.h	/^struct multiboot_tag_module$/;"	s
multiboot_tag_network	os/include/multiboot2.h	/^struct multiboot_tag_network$/;"	s
multiboot_tag_new_acpi	os/include/multiboot2.h	/^struct multiboot_tag_new_acpi$/;"	s
multiboot_tag_old_acpi	os/include/multiboot2.h	/^struct multiboot_tag_old_acpi$/;"	s
multiboot_tag_smbios	os/include/multiboot2.h	/^struct multiboot_tag_smbios$/;"	s
multiboot_tag_string	os/include/multiboot2.h	/^struct multiboot_tag_string$/;"	s
multiboot_tag_vbe	os/include/multiboot2.h	/^struct multiboot_tag_vbe$/;"	s
multiboot_uint16_t	os/include/multiboot2.h	/^typedef unsigned short		multiboot_uint16_t;$/;"	t
multiboot_uint32_t	os/include/multiboot2.h	/^typedef unsigned int		multiboot_uint32_t;$/;"	t
multiboot_uint64_t	os/include/multiboot2.h	/^typedef unsigned long long	multiboot_uint64_t;$/;"	t
multiboot_uint8_t	os/include/multiboot2.h	/^typedef unsigned char		multiboot_uint8_t;$/;"	t
multiboot_vbe_info_block	os/include/multiboot2.h	/^struct multiboot_vbe_info_block$/;"	s
multiboot_vbe_mode_info_block	os/include/multiboot2.h	/^struct multiboot_vbe_mode_info_block$/;"	s
num	os/include/multiboot2.h	/^  multiboot_uint32_t num;$/;"	m	struct:multiboot_tag_elf_sections
nx	os/mem/pagetable.h	/^	uint8_t nx:1$/;"	m	struct:pml4t::pdpt
nx	os/mem/pagetable.h	/^	uint8_t nx:1;$/;"	m	struct:pml4t
nx	os/mem/pagetable.h	/^	uint8_t nx:1;$/;"	m	struct:pml4t::pdpt::pdt
oemid	os/init/xsdt.h	/^	char oemid[6];$/;"	m	struct:xsdt_hdr
oemid	os/init/xsdt.h	/^	uint8_t oemid[6];$/;"	m	struct:rsdp_desc_10
oemrevision	os/init/xsdt.h	/^	uint32_t oemrevision;$/;"	m	struct:xsdt_hdr
oemtableid	os/init/xsdt.h	/^	char oemtableid[8];$/;"	m	struct:xsdt_hdr
offset	os/include/multiboot2.h	/^  multiboot_uint32_t offset;$/;"	m	struct:multiboot_tag_apm
offset_1	os/kernel/idt.h	/^	uint16_t offset_1;$/;"	m	struct:idt_desc
offset_2	os/kernel/idt.h	/^	uint16_t offset_2; \/\/ offset bits 16..31$/;"	m	struct:idt_desc
offset_3	os/kernel/idt.h	/^	uint32_t offset_3;$/;"	m	struct:idt_desc
orig_ax	os/kernel/interrupt.h	/^	uint64_t orig_ax;$/;"	m	struct:pt_regs
outb	os/lib/klib.c	/^inline void outb(uint16_t port, uint8_t val)$/;"	f
outd	os/lib/klib.c	/^inline void outd(uint16_t port, uint32_t val)$/;"	f
overwriting	os/lib/circ_buf.h	/^	uint8_t		overwriting;	\/* Determines of elements are$/;"	m	struct:circ_buf
p	os/mem/pagetable.h	/^	uint8_t p:1$/;"	m	struct:pml4t
p	os/mem/pagetable.h	/^	uint8_t p:1$/;"	m	struct:pml4t::pdpt
p	os/mem/pagetable.h	/^	uint8_t p:1$/;"	m	struct:pml4t::pdpt::pdt
part	os/include/multiboot2.h	/^  multiboot_uint32_t part;$/;"	m	struct:multiboot_tag_bootdev
pat	os/mem/pagetable.h	/^	uint8_t pat:1;$/;"	m	struct:pml4t::pdpt::pdt
pcd	os/mem/pagetable.h	/^	uint8_t pcd:1;$/;"	m	struct:pml4t
pcd	os/mem/pagetable.h	/^	uint8_t pcd:1;$/;"	m	struct:pml4t::pdpt
pcd	os/mem/pagetable.h	/^	uint8_t pcd:1;$/;"	m	struct:pml4t::pdpt::pdt
pci_class_code_table	os/drivers/pci.c	/^pci_classcode_entry_t pci_class_code_table [] =$/;"	v
pci_classcode_entry	os/drivers/pci.c	/^typedef struct pci_classcode_entry$/;"	s	file:
pci_classcode_entry_t	os/drivers/pci.c	/^}  pci_classcode_entry_t;$/;"	t	typeref:struct:pci_classcode_entry	file:
pci_dev	os/drivers/pci.h	/^typedef struct pci_dev {$/;"	s
pci_dev_t	os/drivers/pci.h	/^} pci_dev_t;$/;"	t	typeref:struct:pci_dev
pci_get_class_string	os/drivers/pci.c	/^char *pci_get_class_string(uint8_t class)$/;"	f
pci_get_subclass_string	os/drivers/pci.c	/^char *pci_get_subclass_string(uint8_t class, uint8_t subclass)$/;"	f
pci_init	os/drivers/pci.c	/^void pci_init()$/;"	f
pci_read_config	os/drivers/pci.c	/^uint32_t pci_read_config(uint8_t bus,$/;"	f
pdpt	os/mem/pagetable.h	/^typedef struct pdpt {$/;"	s	struct:pml4t
pdt	os/mem/pagetable.h	/^typedef struct pdt {$/;"	s	struct:pml4t::pdpt
pic_clear_mask	os/kernel/pic.c	/^void pic_clear_mask(uint8_t irq_line)$/;"	f
pic_eoi	os/kernel/pic.c	/^void pic_eoi(uint8_t irq)$/;"	f
pic_get_irr	os/kernel/pic.c	/^uint16_t pic_get_irr(void)$/;"	f
pic_get_irs	os/kernel/pic.c	/^uint16_t pic_get_irs(void)$/;"	f
pic_get_mask	os/kernel/pic.c	/^uint16_t pic_get_mask(void)$/;"	f
pic_init	os/kernel/pic.c	/^void pic_init()$/;"	f
pic_remap	os/kernel/pic.c	/^void pic_remap(uint8_t offset_master, uint8_t offset_slave)$/;"	f
pic_set_mask	os/kernel/pic.c	/^void pic_set_mask(uint8_t irq_line)$/;"	f
pml4t	os/mem/pagetable.h	/^typedef struct pml4t {$/;"	s
pointer	os/include/multiboot2.h	/^  multiboot_uint32_t pointer;$/;"	m	struct:multiboot_tag_efi32
pointer	os/include/multiboot2.h	/^  multiboot_uint64_t pointer;$/;"	m	struct:multiboot_tag_efi64
prog_desc	os/drivers/pci.c	/^	char *		prog_desc ;$/;"	m	struct:pci_classcode_entry	file:
progif	os/drivers/pci.c	/^	uint8_t		progif ;$/;"	m	struct:pci_classcode_entry	file:
pt_regs	os/kernel/interrupt.h	/^typedef struct pt_regs {$/;"	s
pt_regs_t	os/kernel/interrupt.h	/^}__attribute__((packed)) pt_regs_t;$/;"	t	typeref:struct:pt_regs
pwt	os/mem/pagetable.h	/^	uint8_t pwt:1;$/;"	m	struct:pml4t
pwt	os/mem/pagetable.h	/^	uint8_t pwt:1;$/;"	m	struct:pml4t::pdpt
pwt	os/mem/pagetable.h	/^	uint8_t pwt:1;$/;"	m	struct:pml4t::pdpt::pdt
r10	os/kernel/interrupt.h	/^	uint64_t r10;$/;"	m	struct:pt_regs
r11	os/kernel/interrupt.h	/^	uint64_t r11;$/;"	m	struct:pt_regs
r12	os/kernel/interrupt.h	/^	uint64_t r12;$/;"	m	struct:pt_regs
r13	os/kernel/interrupt.h	/^	uint64_t r13;$/;"	m	struct:pt_regs
r14	os/kernel/interrupt.h	/^	uint64_t r14;$/;"	m	struct:pt_regs
r15	os/kernel/interrupt.h	/^	uint64_t r15;$/;"	m	struct:pt_regs
r8	os/kernel/interrupt.h	/^	uint64_t r8;$/;"	m	struct:pt_regs
r9	os/kernel/interrupt.h	/^	uint64_t r9;$/;"	m	struct:pt_regs
red	os/include/multiboot2.h	/^  multiboot_uint8_t red;$/;"	m	struct:multiboot_color
request_irq	os/kernel/interrupt.c	/^void request_irq(uint8_t irq, interrupt_handler_t irq_handler, char *name)$/;"	f
requests	os/include/multiboot2.h	/^  multiboot_uint32_t requests[0];$/;"	m	struct:multiboot_header_tag_information_request
reserved	os/include/multiboot2.h	/^  multiboot_uint16_t reserved;$/;"	m	struct:multiboot_tag_framebuffer_common
reserved	os/include/multiboot2.h	/^  multiboot_uint8_t reserved[6];$/;"	m	struct:multiboot_tag_smbios
reserved	os/init/xsdt.h	/^	uint8_t reserved[3];$/;"	m	struct:rsdp_desc_20
revision	os/init/xsdt.h	/^	uint8_t revision;$/;"	m	struct:rsdp_desc_10
revision	os/init/xsdt.h	/^	uint8_t revision;$/;"	m	struct:xsdt_hdr
rsdp	os/include/multiboot2.h	/^  multiboot_uint8_t rsdp[0];$/;"	m	struct:multiboot_tag_new_acpi
rsdp	os/include/multiboot2.h	/^  multiboot_uint8_t rsdp[0];$/;"	m	struct:multiboot_tag_old_acpi
rsdp	os/init/xsdt.c	/^static rsdp_desc_t *rsdp;$/;"	v	file:
rsdp_10	os/init/xsdt.h	/^	rsdp_desc_10_t rsdp_10;$/;"	m	struct:rsdp_desc_20
rsdp_desc_10	os/init/xsdt.h	/^typedef struct rsdp_desc_10 {$/;"	s
rsdp_desc_10_t	os/init/xsdt.h	/^}__attribute__((packed)) rsdp_desc_10_t;$/;"	t	typeref:struct:rsdp_desc_10
rsdp_desc_20	os/init/xsdt.h	/^typedef struct rsdp_desc_20 {$/;"	s
rsdp_desc_20_t	os/init/xsdt.h	/^} __attribute__ ((packed)) rsdp_desc_20_t;$/;"	t	typeref:struct:rsdp_desc_20
rsdp_desc_t	os/init/xsdt.h	/^typedef rsdp_desc_10_t rsdp_desc_t;$/;"	t
rsdt_address	os/init/xsdt.h	/^	uint32_t rsdt_address;$/;"	m	struct:rsdp_desc_10
rw	os/mem/pagetable.h	/^	uint8_t rw:1;$/;"	m	struct:pml4t
rw	os/mem/pagetable.h	/^	uint8_t rw:1;$/;"	m	struct:pml4t::pdpt
rw	os/mem/pagetable.h	/^	uint8_t rw:1;$/;"	m	struct:pml4t::pdpt::pdt
scanmap_escaped	os/drivers/keyboard.c	/^static uint16_t scanmap_escaped[KB_SCAN_CODES] = {$/;"	v	file:
scanmap_normal	os/drivers/keyboard.c	/^static uint16_t scanmap_normal[KB_SCAN_CODES] = {$/;"	v	file:
section	os/drivers/_keyboard.asm	/^section .text$/;"	l
section	os/init/boot.asm	/^section .bss$/;"	l
section	os/init/boot.asm	/^section .text$/;"	l
section	os/init/multiboot_header.asm	/^section .multiboot_header$/;"	l
section	os/init/rsdp.asm	/^section .text$/;"	l
section	os/init/vars.asm	/^section .bss$/;"	l
section	os/init/vars.asm	/^section .ro_data$/;"	l
section	os/lib/klib_asm.asm	/^section .text$/;"	l
sections	os/include/multiboot2.h	/^  char sections[0];$/;"	m	struct:multiboot_tag_elf_sections
selector	os/kernel/idt.h	/^	uint16_t selector;$/;"	m	struct:idt_desc
set_color	os/lib/klib.c	/^void set_color(uint8_t foreground, uint8_t background)$/;"	f
setup_page_tables	os/init/boot.asm	/^setup_page_tables:$/;"	l
shift	os/drivers/keyboard.c	/^static volatile uint8_t shift = 0;$/;"	v	file:
shndx	os/include/multiboot2.h	/^  multiboot_uint32_t shndx;$/;"	m	struct:multiboot_tag_elf_sections
si	os/kernel/interrupt.h	/^	uint64_t si;$/;"	m	struct:pt_regs
signature	os/init/xsdt.h	/^	char signature[4];$/;"	m	struct:xsdt_hdr
signature	os/init/xsdt.h	/^	uint8_t signature[8];$/;"	m	struct:rsdp_desc_10
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_address
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_console_flags
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_entry_address
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_framebuffer
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_information_request
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_header_tag_module_align
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_apm
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_basic_meminfo
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_bootdev
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_efi32
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_efi64
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_efi_mmap
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_elf_sections
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_framebuffer_common
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_mmap
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_module
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_network
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_new_acpi
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_old_acpi
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_smbios
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_string
size	os/include/multiboot2.h	/^  multiboot_uint32_t size;$/;"	m	struct:multiboot_tag_vbe
size	os/lib/circ_buf.h	/^	uint64_t	size;		\/* Size of the buffer in elements *\/$/;"	m	struct:circ_buf
slice	os/include/multiboot2.h	/^  multiboot_uint32_t slice;$/;"	m	struct:multiboot_tag_bootdev
slot	os/drivers/pci.h	/^	uint8_t slot;$/;"	m	struct:pci_dev
sp	os/kernel/interrupt.h	/^	uint64_t sp;$/;"	m	struct:pt_regs
ss	os/kernel/interrupt.h	/^	uint64_t ss;$/;"	m	struct:pt_regs
stack_bottom	os/init/boot.asm	/^stack_bottom:$/;"	l
stack_top	os/init/boot.asm	/^stack_top:$/;"	l
start	os/init/boot.asm	/^start:$/;"	l
start	os/lib/circ_buf.h	/^	uint8_t		*start;		\/* Start of the buffer *\/$/;"	m	struct:circ_buf
string	os/include/multiboot2.h	/^  char string[0];$/;"	m	struct:multiboot_tag_string
sub_desc	os/drivers/pci.c	/^	char *		sub_desc ;$/;"	m	struct:pci_classcode_entry	file:
subclass	os/drivers/pci.c	/^	uint8_t		subclass ;$/;"	m	struct:pci_classcode_entry	file:
tables	os/include/multiboot2.h	/^  multiboot_uint8_t tables[0];$/;"	m	struct:multiboot_tag_smbios
tail	os/lib/circ_buf.h	/^	uint8_t		*tail;		\/* Tail of the buffer *\/$/;"	m	struct:circ_buf
test_memcmp	os/test/test.c	/^uint8_t test_memcmp()$/;"	f
tests_run	os/test/test.c	/^void tests_run()$/;"	f
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_address
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_console_flags
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_entry_address
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_framebuffer
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_information_request
type	os/include/multiboot2.h	/^  multiboot_uint16_t type;$/;"	m	struct:multiboot_header_tag_module_align
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_mmap_entry
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_apm
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_basic_meminfo
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_bootdev
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_efi32
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_efi64
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_efi_mmap
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_elf_sections
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_framebuffer_common
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_mmap
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_module
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_network
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_new_acpi
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_old_acpi
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_smbios
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_string
type	os/include/multiboot2.h	/^  multiboot_uint32_t type;$/;"	m	struct:multiboot_tag_vbe
type_attr	os/kernel/idt.h	/^	uint8_t type_attr;$/;"	m	struct:idt_desc
update_cursor	os/lib/klib.c	/^void update_cursor(int row, int col)$/;"	f
us	os/mem/pagetable.h	/^	uint8_t us:1;$/;"	m	struct:pml4t
us	os/mem/pagetable.h	/^	uint8_t us:1;$/;"	m	struct:pml4t::pdpt
us	os/mem/pagetable.h	/^	uint8_t us:1;$/;"	m	struct:pml4t::pdpt::pdt
vbe_control_info	os/include/multiboot2.h	/^  struct multiboot_vbe_info_block vbe_control_info;$/;"	m	struct:multiboot_tag_vbe	typeref:struct:multiboot_tag_vbe::multiboot_vbe_info_block
vbe_interface_len	os/include/multiboot2.h	/^  multiboot_uint16_t vbe_interface_len;$/;"	m	struct:multiboot_tag_vbe
vbe_interface_off	os/include/multiboot2.h	/^  multiboot_uint16_t vbe_interface_off;$/;"	m	struct:multiboot_tag_vbe
vbe_interface_seg	os/include/multiboot2.h	/^  multiboot_uint16_t vbe_interface_seg;$/;"	m	struct:multiboot_tag_vbe
vbe_mode	os/include/multiboot2.h	/^  multiboot_uint16_t vbe_mode;$/;"	m	struct:multiboot_tag_vbe
vbe_mode_info	os/include/multiboot2.h	/^  struct multiboot_vbe_mode_info_block vbe_mode_info;$/;"	m	struct:multiboot_tag_vbe	typeref:struct:multiboot_tag_vbe::multiboot_vbe_mode_info_block
version	os/include/multiboot2.h	/^  multiboot_uint16_t version;$/;"	m	struct:multiboot_tag_apm
vga_attrib	os/lib/klib.c	/^static uint8_t vga_attrib = (LIGHT_CYAN)|(BLACK << 4);$/;"	v	file:
vga_buffer	os/lib/klib.c	/^static uint8_t *vga_buffer = (uint8_t*)VGA_ADDRESS;$/;"	v	file:
vga_buffer_x	os/lib/klib.c	/^static uint8_t vga_buffer_x = 0x00;$/;"	v	file:
vga_buffer_y	os/lib/klib.c	/^static uint8_t vga_buffer_y = 0x00;$/;"	v	file:
width	os/include/multiboot2.h	/^  multiboot_uint32_t width;$/;"	m	struct:multiboot_header_tag_framebuffer
write_char	os/lib/klib.c	/^void write_char(uint8_t c)$/;"	f
xsdt	os/init/xsdt.c	/^static xsdt_hdr_t *xsdt;$/;"	v	file:
xsdt_address	os/init/xsdt.h	/^	uint64_t xsdt_address;$/;"	m	struct:rsdp_desc_20
xsdt_checksum	os/init/xsdt.c	/^uint8_t xsdt_checksum(xsdt_hdr_t *hdr)$/;"	f
xsdt_find_sdt	os/init/xsdt.c	/^void *xsdt_find_sdt(char* signature)$/;"	f
xsdt_hdr	os/init/xsdt.h	/^typedef struct xsdt_hdr {$/;"	s
xsdt_hdr_t	os/init/xsdt.h	/^} __attribute__((packed)) xsdt_hdr_t;$/;"	t	typeref:struct:xsdt_hdr
xsdt_init	os/init/xsdt.c	/^void xsdt_init(void)$/;"	f
zero	os/include/multiboot2.h	/^  multiboot_uint32_t zero;$/;"	m	struct:multiboot_mmap_entry
zero	os/kernel/idt.h	/^	uint32_t zero;$/;"	m	struct:idt_desc
